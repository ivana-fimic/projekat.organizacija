/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package rs.ac.bg.fon.ai.projekat.organizacija.form.clan;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.JsonSerializer;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import rs.ac.bg.fon.ai.projekat.organizacija.controller.KlijentController;
import rs.ac.bg.fon.ai.projekat.organizacija.domain.Clan;
import rs.ac.bg.fon.ai.projekat.organizacija.domain.Pozicija;
import rs.ac.bg.fon.ai.projekat.organizacija.domain.Tim;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Ivana
 */
public class KreirajClana extends javax.swing.JDialog {

    /**
     * Creates new form KreirajClana
     */
    public KreirajClana(java.awt.Frame parent, boolean modal) throws Exception {
        super(parent, modal);
        initComponents();
        popuniComboe();
        setTitle("Kreiranje clana");
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtGodinaStudija = new javax.swing.JTextField();
        txtFakultet = new javax.swing.JTextField();
        cmbTim = new javax.swing.JComboBox<>();
        cmbPozicija = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        jLabel3.setText("Godina studija:");

        jLabel4.setText("Fakultet:");

        cmbPozicija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPozicijaActionPerformed(evt);
            }
        });

        jLabel5.setText("Tim:");

        jLabel6.setText("Pozicija:");

        jButton1.setText("KREIRAJ ČLANA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIme, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(txtPrezime)
                            .addComponent(txtGodinaStudija)
                            .addComponent(txtFakultet)
                            .addComponent(cmbTim, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbPozicija, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtGodinaStudija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFakultet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbPozicija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(42, 42, 42)
                .addComponent(jButton1)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            String ime = txtIme.getText();
            String prezime = txtPrezime.getText();
            String godinaStudija = txtGodinaStudija.getText();

            String fakultet = txtFakultet.getText();
            Tim t = (Tim) cmbTim.getSelectedItem();
            Pozicija p = (Pozicija) cmbPozicija.getSelectedItem();
            String prazniPodaci = daLisuPoljaPrazna(ime, prezime, godinaStudija, fakultet, t, p);
            if (!prazniPodaci.equals("")) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira člana!", "Informacija", JOptionPane.INFORMATION_MESSAGE);
                JOptionPane.showMessageDialog(this, "Polja su prazna: " + prazniPodaci, "GRESKA", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String losFormat = daLiJeDobarFormat(ime, prezime, godinaStudija, fakultet);
            if (!losFormat.equals("")) {
                JOptionPane.showMessageDialog(this, losFormat, "GRESKA", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int godStudija = Integer.parseInt(txtGodinaStudija.getText());
            Clan c = new Clan(0, ime, prezime, godStudija, p, t, fakultet);
            c = KlijentController.getInstance().dodajČlana(c);
            upisiUJSON(c);

            JOptionPane.showMessageDialog(this, "Sistem je kreirao člana.", "Informacija", JOptionPane.INFORMATION_MESSAGE);
            osveziFormu();

        } catch (Exception ex) {
            ex.printStackTrace();
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbPozicijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPozicijaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPozicijaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Pozicija> cmbPozicija;
    private javax.swing.JComboBox<Tim> cmbTim;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtFakultet;
    private javax.swing.JTextField txtGodinaStudija;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void popuniComboe() throws Exception {

        List<Pozicija> pozicije = KlijentController.getInstance().vratiPozicije();
        List<Tim> timovi = KlijentController.getInstance().vratiTimove();
        for (Tim t : timovi) {
            cmbTim.addItem(t);

        }
        for (Pozicija p : pozicije) {
            cmbPozicija.addItem(p);

        }
        cmbTim.setSelectedIndex(-1);
        cmbPozicija.setSelectedIndex(-1);
    }

    private String daLisuPoljaPrazna(String ime, String prezime, String godStudija, String fakultet, Tim t, Pozicija p) {
        String poruka = "";
        if (ime.equals("")) {
            poruka += "Ime, ";
        }
        if (prezime.equals("")) {
            poruka += "Prezime, ";
        }

        if (godStudija.equals("")) {
            poruka += "Godina studija, ";
        }

        if (fakultet.equals("")) {
            poruka += "Fakultet, ";
        }
        if (t == null) {
            poruka += "Tim, ";
        }
        if (p == null) {
            poruka += "Pozicija, ";
        }
        return poruka;
    }

    private String daLiJeDobarFormat(String ime, String prezime, String godinaStudija, String fakultet) {
        String poruka = "";

        if (ime.matches(".*\\d+.*")) {
            poruka += "Ime ne sme sadrzati broj \n";
        }
        if (ime.contains(" ")) {
            poruka += "Ime ne sme sadrzati razmak \n";
        }
        if (prezime.contains(" ")) {
            poruka += "Prezime ne sme sadrzati razmak \n";
        }
        if (prezime.matches(".*\\d+.*")) {
            poruka += "Prezime ne sme sadrzati broj \n";
        }
        if (Character.isLowerCase(ime.charAt(0))) {
            poruka += "Prvo slovo imena mora biti veliko \n";
        }

        if (Character.isLowerCase(prezime.charAt(0))) {
            poruka += "Prvo slovo prezimena mora biti veliko \n";
        }
        if (!(godinaStudija.matches(".*\\d+.*"))) {
            poruka += "Godina studija mora biti broj \n";
        }
        if (!godinaStudija.matches("[1-5]+")) {
            poruka += "Godina studija mora biti u intervalu od 1 do 5 \n";
        }
        if (fakultet.matches(".*\\d+.*")) {
            poruka += "Fakultet ne sme sadrzati broj \n";
        }
        if (Character.isLowerCase(fakultet.charAt(0))) {
            poruka += "Prvo slovo fakulteta mora biti veliko \n";
        }

        return poruka;
    }

    private void osveziFormu() {
        txtFakultet.setText("");
        txtGodinaStudija.setText("");
        txtIme.setText("");
        txtPrezime.setText("");
        cmbPozicija.setSelectedIndex(-1);
        cmbTim.setSelectedIndex(-1);
    }

    private void upisiUJSON(Clan c) {
        String filePath = "src/main/resources/clan.json";
        System.out.println(c);

        GsonBuilder gsonBuilder = new GsonBuilder();
        gsonBuilder.excludeFieldsWithoutExposeAnnotation();

        gsonBuilder.setPrettyPrinting();

        gsonBuilder.registerTypeAdapter(LocalDate.class, (JsonSerializer<LocalDate>) (src, typeOfSrc, context)
                -> new com.google.gson.JsonPrimitive(src.toString())
        );
        gsonBuilder.registerTypeAdapter(LocalDate.class, (JsonDeserializer<LocalDate>) (json, typeOfT, context)
                -> LocalDate.parse(json.getAsString())
        );

        Gson gson = gsonBuilder.create();

        try (FileWriter out = new FileWriter(filePath)) {
            String jsonString = gson.toJson(c);
            System.out.println("JSON string: " + jsonString);
            out.write(jsonString);
            System.out.println("Uspešno upisano u fajl: " + filePath);
        } catch (IOException e) {
            e.printStackTrace();
            System.err.println("Greška pri pisanju u fajl: " + filePath);
        }
    }

}
