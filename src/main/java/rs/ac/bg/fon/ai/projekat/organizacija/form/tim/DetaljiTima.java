/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package rs.ac.bg.fon.ai.projekat.organizacija.form.tim;

import rs.ac.bg.fon.ai.projekat.organizacija.controller.KlijentController;
import rs.ac.bg.fon.ai.projekat.organizacija.domain.DetaljiPozicija;
import rs.ac.bg.fon.ai.projekat.organizacija.domain.Pozicija;
import rs.ac.bg.fon.ai.projekat.organizacija.domain.Projekat;
import rs.ac.bg.fon.ai.projekat.organizacija.domain.Tim;
import rs.ac.bg.fon.ai.projekat.organizacija.models.ModelTabeleBrojPozicija;
import rs.ac.bg.fon.ai.projekat.organizacija.pomocne.Moodovi;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;



/**
 *
 * @author Ivana
 */
public class DetaljiTima extends javax.swing.JDialog {

    /**
     * Creates new form DetaljiTima
     */
    List<Pozicija> pozicije;
    List<DetaljiPozicija> brojpozicija = new ArrayList<>();
    ModelTabeleBrojPozicija model;
    private Tim tim;
    Moodovi moodTabele;
    private PretragaTima roditelj1;
    private DetaljiTima roditelj2;

    public JTable getTblBrPozicija1() {
        return tblBrPozicija1;
    }

    public void setTblBrPozicija1(JTable tblBrPozicija1) {
        this.tblBrPozicija1 = tblBrPozicija1;
    }

    public JComboBox<Projekat> getCmbProjekti() {
        return cmbProjekti;
    }

    public void setCmbProjekti(JComboBox<Projekat> cmbProjekti) {
        this.cmbProjekti = cmbProjekti;
    }

    public JTextField getTxtNazivTima() {
        return txtNazivTima;
    }

    public void setTxtNazivTima(JTextField txtNazivTima) {
        this.txtNazivTima = txtNazivTima;
    }

    public JTextField getTxtUkupnoClanova() {
        return txtUkupnoClanova;
    }

    public void setTxtUkupnoClanova(JTextField txtUkupnoClanova) {
        this.txtUkupnoClanova = txtUkupnoClanova;
    }

    public DetaljiTima(java.awt.Dialog parent, java.awt.Dialog grandparent, boolean modal, Tim t, Moodovi mood) throws Exception {
        super(parent, modal);
        initComponents();
        popuniCombo();
        if (parent instanceof PretragaTima) {
            roditelj1 = (PretragaTima) parent;
        } else {
            roditelj2 = (DetaljiTima) parent;
            roditelj1 = (PretragaTima) grandparent;
        }

        tim = t;
        if (mood == Moodovi.PRIKAZ) {
            txtNazivTima.setEditable(false);
            cmbProjekti.setEnabled(false);
            txtUkupnoClanova.setEditable(false);
            cmbPozicija2.setEnabled(false);
            btnObrisi.setEnabled(false);
            btnDodaj.setEnabled(false);
            btnSacuvajIzmene.setEnabled(false);
        }
        setLocationRelativeTo(null);
        setTitle("Detalji tima");

        txtNazivTima.setText(t.getNazivTima());
        cmbProjekti.setSelectedItem(t.getProjekat());
        txtUkupnoClanova.setText(String.valueOf(t.getBrojClanova()));
        pozicije = KlijentController.getInstance().vratiPozicije();
        popuniComboPozicijama();
        cmbPozicija2.setSelectedIndex(0);

        for (DetaljiPozicija dp : t.getBrojPozicija()) {
            System.out.println(dp.getPozicija().getNazivPozicije());
        }
        tblBrPozicija1.setModel(new ModelTabeleBrojPozicija(t.getBrojPozicija()));
        // ModelTabeleBrojPozicija mt= (ModelTabeleBrojPozicija) tblBrPozicija1.getModel();
        //t.setBrojPozicija(mt.getPozicije());
        moodTabele = Moodovi.NEIZMENJENO;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jProgressBar1 = new javax.swing.JProgressBar();
        btnIzmeni = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbPozicija2 = new javax.swing.JComboBox<>();
        txtBrojPozicije2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBrPozicija1 = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblNazivTima = new javax.swing.JLabel();
        lblNazivProjekta = new javax.swing.JLabel();
        lblUkupnoClanova = new javax.swing.JLabel();
        txtNazivTima = new javax.swing.JTextField();
        txtUkupnoClanova = new javax.swing.JTextField();
        cmbProjekti = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btnSacuvajIzmene = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnIzmeni.setText("IZMENI TIM");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalji pozicija"));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Naziv Pozicije");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Broj ƒçlanova");

        tblBrPozicija1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblBrPozicija1);

        btnDodaj.setText("DODAJ");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("OBRISI");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                            .addComponent(cmbPozicija2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBrojPozicije2)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(btnObrisi)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDodaj))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPozicija2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrojPozicije2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalji tima"));

        lblNazivTima.setText("Naziv Tima:");

        lblNazivProjekta.setText("Naziv Projekta:");

        lblUkupnoClanova.setText("Ukupan broj ƒçlanova:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNazivTima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNazivProjekta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUkupnoClanova, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNazivTima, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(txtUkupnoClanova, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(cmbProjekti, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNazivTima)
                    .addComponent(txtNazivTima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNazivProjekta)
                    .addComponent(cmbProjekti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUkupnoClanova)
                    .addComponent(txtUkupnoClanova, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jButton1.setText("OBRISI TIM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnSacuvajIzmene.setText("SACUVAJ IZMENE");
        btnSacuvajIzmene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajIzmeneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton1)
                        .addGap(63, 63, 63)
                        .addComponent(btnIzmeni)
                        .addGap(71, 71, 71)
                        .addComponent(btnSacuvajIzmene)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(35, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(230, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnIzmeni)
                    .addComponent(btnSacuvajIzmene))
                .addGap(14, 14, 14))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(457, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        try {
            Tim ucitanIzBaze = KlijentController.getInstance().ucitajTim(tim);
            JOptionPane.showMessageDialog(this, "Sistem je ucitao tim", "POTVRDA", JOptionPane.INFORMATION_MESSAGE);
            new DetaljiTima(this, roditelj1, true, ucitanIzBaze, Moodovi.IZMENA).setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(DetaljiTima.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        String pozicija = cmbPozicija2.getSelectedItem().toString();
        Pozicija poz = new Pozicija();
        for (Pozicija p : pozicije) {
            if (p.getNazivPozicije().equals(pozicija)) {
                poz = p;
            }

        }
        int broj = Integer.parseInt(txtBrojPozicije2.getText());

        DetaljiPozicija p = new DetaljiPozicija(tim, poz, broj);
        ModelTabeleBrojPozicija tm = (ModelTabeleBrojPozicija) tblBrPozicija1.getModel();

        if (tm.postojiPozicija(p)) {
            JOptionPane.showMessageDialog(this, "Vec ste uneli tu poziciju za ovaj tim!");
            return;
        }
        tm.dodajPoziciju(p);
        moodTabele = Moodovi.DODATO;
        tim.setBrojPozicija(tm.getPozicije());
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        moodTabele = Moodovi.OBRISANO;
        int row = tblBrPozicija1.getSelectedRow();

        if (row >= 0) {
            ModelTabeleBrojPozicija tm = (ModelTabeleBrojPozicija) tblBrPozicija1.getModel();
            tm.obrisiPoziciju(row);
            moodTabele = Moodovi.OBRISANO;
            tim.setBrojPozicija(tm.getPozicije());

        }


    }//GEN-LAST:event_btnObrisiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int odgovor = JOptionPane.showConfirmDialog(this, "DA LI ZELITE DA OBRISETE TIM " + tim.getNazivTima() + "-" + tim.getProjekat().getNazivProjekta() + "?", "Potvrda", JOptionPane.YES_NO_OPTION);
        if (odgovor == JOptionPane.YES_OPTION) {
            try {
                KlijentController.getInstance().obrisiTim(tim);
                JOptionPane.showMessageDialog(this, "Sistem je obrisao podatke o timu");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "‚ÄúSistem ne moze da obrise tim", "GRESKA", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (odgovor == JOptionPane.NO_OPTION) {
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSacuvajIzmeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajIzmeneActionPerformed
        try {

            String nazivTima = txtNazivTima.getText();
            Projekat p = (Projekat) cmbProjekti.getSelectedItem();
            String brClanova = txtUkupnoClanova.getText();
            ModelTabeleBrojPozicija mp = (ModelTabeleBrojPozicija) tblBrPozicija1.getModel();
            String prazniPodaci = daLisuPoljaPrazna(p.getNazivProjekta(), nazivTima, brClanova);
            if (!prazniPodaci.equals("")) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti tim!", "GRESKA", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this, "Polja su prazna: " + prazniPodaci, "GRESKA", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String losFormat = daLiJeDobarFormat(p.getNazivProjekta(), nazivTima, brClanova);
            if (!losFormat.equals("")) {
                JOptionPane.showMessageDialog(this, losFormat, "GRESKA", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int ukupnobrClanova = Integer.parseInt(brClanova);
            List<DetaljiPozicija> lista = mp.getPozicije();
            if (ukupnobrClanova <= 1) {
                JOptionPane.showMessageDialog(this, "Broj clanova mora biti vece od 1", "GRESKA", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String proveraBrojaPozicije = daLiJeDobarUkupanBroj(ukupnobrClanova, lista);
            if (!proveraBrojaPozicije.equals("")) {
                JOptionPane.showMessageDialog(this, proveraBrojaPozicije, "GRESKA", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Tim tim2 = new Tim();
            tim2.setNazivTima(nazivTima);
            tim2.getProjekat().setNazivProjekta(p.getNazivProjekta());
            tim2.setBrojClanova(ukupnobrClanova);
            tim2.setBrojPozicija(lista);
            tim2.setIDTima(tim.getIDTima());
            tim2.setMoodTabele(moodTabele);

            KlijentController.getInstance().izmeniTim(tim2);

            if (roditelj1 instanceof PretragaTima && roditelj1 != null) {
                roditelj1.refreshTable();
                System.out.println("If za Pretragu");
            }
            if (roditelj2 instanceof DetaljiTima && roditelj2 != null) {
                roditelj2.getCmbProjekti().setSelectedItem(tim2.getProjekat());
                roditelj2.getTxtNazivTima().setText(tim2.getNazivTima());
                roditelj2.getTxtUkupnoClanova().setText(String.valueOf(tim2.getBrojClanova()));
                ModelTabeleBrojPozicija mt = (ModelTabeleBrojPozicija) roditelj2.getTblBrPozicija1().getModel();
                mt.setPozicije(tim2.getBrojPozicija());
                mt.refreshTable();

            }
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio tim");
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(DetaljiTima.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSacuvajIzmeneActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvajIzmene;
    private javax.swing.JComboBox<String> cmbPozicija2;
    private javax.swing.JComboBox<Projekat> cmbProjekti;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblNazivProjekta;
    private javax.swing.JLabel lblNazivTima;
    private javax.swing.JLabel lblUkupnoClanova;
    private javax.swing.JTable tblBrPozicija1;
    private javax.swing.JTextField txtBrojPozicije2;
    private javax.swing.JTextField txtNazivTima;
    private javax.swing.JTextField txtUkupnoClanova;
    // End of variables declaration//GEN-END:variables

    private void popuniComboPozicijama() {

        for (Pozicija p : pozicije) {
            cmbPozicija2.addItem(p.getNazivPozicije());

        }
    }

    private String daLisuPoljaPrazna(String nazivProjekta, String nazivTima, String brClanova) {
        String poruka = "";
        if (nazivProjekta.equals("")) {
            poruka += "Naziv projekta, ";
        }
        if (nazivTima.equals("")) {
            poruka += "Naziv tima, ";
        }
        if (brClanova.equals("")) {
            poruka += "Ukupno clanova, ";
        }
        return poruka;
    }

    private String daLiJeDobarFormat(String nazivProjekta, String nazivTima, String brClanova) {
        String poruka = "";
        if (nazivProjekta.matches(".*\\d+.*")) {
            poruka += "Naziv projekta ne sme sadrzati broj \n";
        }
        if (nazivTima.matches(".*\\d+.*")) {
            poruka += "Naziv tima ne sme sadrzati broj \n";
        }
        if (!(brClanova.matches(".*\\d+.*"))) {
            poruka += "Ukupan broj clanova mora biti broj \n";
        }
        if (!(nazivProjekta.equals(nazivProjekta.toUpperCase()))) {

            poruka += "Naziv projekta mora imati sva velika slova \n";
        }
        if (Character.isLowerCase(nazivTima.charAt(0))) {
            poruka += "Prvo slovo naziva tima mora biti veliko \n";
        }

        return poruka;
    }

    private String daLiJeDobarUkupanBroj(int ukupnoClanova, List<DetaljiPozicija> brPozicija) {
        String poruka = "";
        if (brPozicija.size() <= 0) {
            poruka = "Niste uneli broj ƒçlanova ni za jednu poziciju";
            return poruka;
        }
        int ukupnoPoPozicijama = 0;
        for (DetaljiPozicija dp : brPozicija) {
            ukupnoPoPozicijama += dp.getBrojPozicija();
        }
        if (ukupnoClanova != ukupnoPoPozicijama) {
            poruka = "Ne poklapa se ukupan broj ƒçlanova sa brojevima po pozicijama";

        }
        return poruka;
    }

    private void popuniCombo() throws Exception {
        List<Projekat> projek = KlijentController.getInstance().vratiProjekte();
        for (Projekat p : projek) {
            cmbProjekti.addItem(p);

        }
        cmbProjekti.setSelectedIndex(-1);
    }

}
